const ed25519PrivateKeyPem = `-----BEGIN PRIVATE KEY-----
MC4CAQAwBQYDK2VwBCIEIO0STqFfJ0cKSyCX0kqxc6KKqy0yxLWcDc+GpmwN6I61
-----END PRIVATE KEY-----`

const ed25519Cert = `-----BEGIN CERTIFICATE-----
MIICvzCCAnGgAwIBAgIUSGPsrmULmX+pmXSx8vkAGRGaOOAwBQYDK2VwMFwxCzAJ
BgNVBAYTAlVTMQ0wCwYDVQQIDARUZXN0MQ4wDAYDVQQHDAVMb2NhbDEOMAwGA1UE
CgwFTXlPcmcxCzAJBgNVBAsMAkNBMREwDwYDVQQDDAhNeVJvb3RDQTAeFw0yNTEw
MDExOTA1MzNaFw0yNjEwMDExOTA1MzNaMGExCzAJBgNVBAYTAlVTMQ0wCwYDVQQI
DARUZXN0MQ4wDAYDVQQHDAVMb2NhbDEOMAwGA1UECgwFTXlPcmcxEDAOBgNVBAsM
B1NpZ25pbmcxETAPBgNVBAMMCEpvaG4gRG9lMCowBQYDK2VwAyEAR7uxH1mbl9DC
515TONEE9oU6G2uY/nJRLTTfyn8hoTqjggE+MIIBOjAJBgNVHRMEAjAAMAsGA1Ud
DwQEAwIGwDAdBgNVHSUEFjAUBggrBgEFBQcDBAYIKwYBBQUHAwMwLQYDVR0fBCYw
JDAioCCgHoYcaHR0cDovL2xvY2FsaG9zdDo4MDgwL2NhLmNybDCBkQYIKwYBBQUH
AQEEgYQwgYEwKAYIKwYBBQUHMAKGHGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9jYS5j
cnQwJgYIKwYBBQUHMAGGGmh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9vY3NwMC0GCCsG
AQUFBzABhiFodHRwOi8vbG9jYWxob3N0OjgwODAvb2NzcC1iYWNrdXAwHQYDVR0O
BBYEFFon+WBXwDRFO4v67x7JWMOUqWplMB8GA1UdIwQYMBaAFO12CkJhO3XBnByK
NVTzDhiCEzQgMAUGAytlcANBAPLunoMu/u1l14PunPtu40liHDyhLY0aoM0xyazE
vKMnUPIOI5G3GFGPUgdUcQGyEUDlbbtiD67wb7SBq1FQmwo=
-----END CERTIFICATE-----`

const ed25519CaCert = `-----BEGIN CERTIFICATE-----
MIIBzTCCAX+gAwIBAgIUFU0ut0cHafe62/LpZRia7Ju6TG4wBQYDK2VwMFwxCzAJ
BgNVBAYTAlVTMQ0wCwYDVQQIDARUZXN0MQ4wDAYDVQQHDAVMb2NhbDEOMAwGA1UE
CgwFTXlPcmcxCzAJBgNVBAsMAkNBMREwDwYDVQQDDAhNeVJvb3RDQTAeFw0yNTEw
MDExOTA1MzNaFw0zNTA5MjkxOTA1MzNaMFwxCzAJBgNVBAYTAlVTMQ0wCwYDVQQI
DARUZXN0MQ4wDAYDVQQHDAVMb2NhbDEOMAwGA1UECgwFTXlPcmcxCzAJBgNVBAsM
AkNBMREwDwYDVQQDDAhNeVJvb3RDQTAqMAUGAytlcAMhAKnT5hMl4700SVqVTAi1
MJ1qcxc+moWdazUMuyYZy9HNo1MwUTAdBgNVHQ4EFgQU7XYKQmE7dcGcHIo1VPMO
GIITNCAwHwYDVR0jBBgwFoAU7XYKQmE7dcGcHIo1VPMOGIITNCAwDwYDVR0TAQH/
BAUwAwEB/zAFBgMrZXADQQCTxD9zq1EYOJ1PkbhzxrrNaWzXQtOkRxWoMCQcejxV
uZmu2whkNpsuV1rkhs9DSGiVsc5WdlGkDgWTP2c0DS8B
-----END CERTIFICATE-----`

const ed25519CaCrl = `-----BEGIN X509 CRL-----
MIHjMIGWAgEBMAUGAytlcDBcMQswCQYDVQQGEwJVUzENMAsGA1UECAwEVGVzdDEO
MAwGA1UEBwwFTG9jYWwxDjAMBgNVBAoMBU15T3JnMQswCQYDVQQLDAJDQTERMA8G
A1UEAwwITXlSb290Q0EXDTI1MTAwMTE5MDUzM1oXDTI1MTAzMTE5MDUzM1qgDjAM
MAoGA1UdFAQDAgEBMAUGAytlcANBAPdQZS8u98dtPW2gCLeELGroUTvvf2oOabxK
3SBQa5/39gytebVVkGKBgUMVptDel7ywUoKLDdJpNCvLCdPuJQs=
-----END X509 CRL-----`

const ed25519OcspResponse = `-----BEGIN OCSP RESPONSE-----
MIIDbwoBAKCCA2gwggNkBgkrBgEFBQcwAQEEggNVMIIDUTCCAQShZjBkMQswCQYD
VQQGEwJVUzENMAsGA1UECAwEVGVzdDEOMAwGA1UEBwwFTG9jYWwxDjAMBgNVBAoM
BU15T3JnMQ0wCwYDVQQLDARPQ1NQMRcwFQYDVQQDDA5PQ1NQIFJlc3BvbmRlchgP
MjAyNTEwMDExOTA1MzNaMGQwYjBNMAkGBSsOAwIaBQAEFMMBXUhH1UJjC9/mkAgx
tU0Ghr32BBTtdgpCYTt1wZwcijVU8w4YghM0IAIUSGPsrmULmX+pmXSx8vkAGRGa
OOCCABgPMjAyNTEwMDExOTA1MzNaoSMwITAfBgkrBgEFBQcwAQIEEgQQuIwrYUxf
bDyy6U4Yzip7FDAFBgMrZXADQQCNROALVxQGh/CB0r7dccCveZVzQmncY5Xb8pRq
PwR65ebry2mOmXE/ZhoSkftHcNvGZmL4QnJrkgi6iweZGLUEoIIB+zCCAfcwggHz
MIIBpaADAgECAhRIY+yuZQuZf6mZdLHy+QAZEZo44TAFBgMrZXAwXDELMAkGA1UE
BhMCVVMxDTALBgNVBAgMBFRlc3QxDjAMBgNVBAcMBUxvY2FsMQ4wDAYDVQQKDAVN
eU9yZzELMAkGA1UECwwCQ0ExETAPBgNVBAMMCE15Um9vdENBMCAXDTI1MTAwMTE5
MDUzM1oYDzIwNTMwMjE2MTkwNTMzWjBkMQswCQYDVQQGEwJVUzENMAsGA1UECAwE
VGVzdDEOMAwGA1UEBwwFTG9jYWwxDjAMBgNVBAoMBU15T3JnMQ0wCwYDVQQLDARP
Q1NQMRcwFQYDVQQDDA5PQ1NQIFJlc3BvbmRlcjAqMAUGAytlcAMhAP/CHPlPWeuI
xWGQ1WElwiAdT8SWqbTBNDSxKNZc8TAko28wbTAJBgNVHRMEAjAAMAsGA1UdDwQE
AwIHgDATBgNVHSUEDDAKBggrBgEFBQcDCTAdBgNVHQ4EFgQUpYGN6giPWZlenWLk
wr5PaFcThE8wHwYDVR0jBBgwFoAU7XYKQmE7dcGcHIo1VPMOGIITNCAwBQYDK2Vw
A0EAeObt8DbDTIP4gKs3RzjxLZJKqUZF5dFgUg1c6y18TCQFjB0VMb3QF3/Vfstn
bjkUuulTzONWt3pb0TfIYzEmAw==
-----END OCSP RESPONSE-----`

function pemToUint8Array(
    pem: string | Uint8Array<ArrayBuffer>,
): Uint8Array<ArrayBuffer> {
    pem = typeof pem === 'string' ? pem : new TextDecoder().decode(pem)

    // Remove all headers, footers, and whitespace
    const b64 = pem
        .trim()
        .replace(/-----BEGIN [^-]+-----/, '')
        .replace(/-----END [^-]+-----/, '')
        .replace(/\s+/g, '')

    const binary = atob(b64)
    const bytes = new Uint8Array(binary.length)
    for (let i = 0; i < binary.length; i++) {
        bytes[i] = binary.charCodeAt(i)
    }

    return bytes
}

export const ed25519SigningKeys = {
    privateKey: pemToUint8Array(ed25519PrivateKeyPem),
    cert: pemToUint8Array(ed25519Cert),
    caCert: pemToUint8Array(ed25519CaCert),
    caCrl: pemToUint8Array(ed25519CaCrl),
    ocspResponse: pemToUint8Array(ed25519OcspResponse),
    privateKeyPem: ed25519PrivateKeyPem,
    certPem: ed25519Cert,
    caCertPem: ed25519CaCert,
    caCrlPem: ed25519CaCrl,
    ocspResponsePem: ed25519OcspResponse,
}
