const ecP384PrivateKeyPem = `-----BEGIN PRIVATE KEY-----
MIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGeMIGbAgEBBDCQ3IvZ17UWc6wfWcr6
+zaAHWkaFu48scgEVVT75KVtsiZolXclmwhQNDKkLfAEVNihZANiAAQyAVYxvpJ0
xMv2cGsTlnOvWEFA2Qxyqs6lN3hIWdCLcfk6oCveujHAgtVF0rUwHpVFMOwhDj3e
Pd/Ch7VcsJW26ux72HPaQP5fCqGGDzv4q5I554ILMvKhuwes9Ou7ffI=
-----END PRIVATE KEY-----`

const ecP384Cert = `-----BEGIN CERTIFICATE-----
MIIDPDCCAsKgAwIBAgIUASIOdmkwstSawU8Q2bl+qQgyYKowCgYIKoZIzj0EAwIw
XDELMAkGA1UEBhMCVVMxDTALBgNVBAgMBFRlc3QxDjAMBgNVBAcMBUxvY2FsMQ4w
DAYDVQQKDAVNeU9yZzELMAkGA1UECwwCQ0ExETAPBgNVBAMMCE15Um9vdENBMB4X
DTI1MTAwMTE5MDUzM1oXDTI2MTAwMTE5MDUzM1owYTELMAkGA1UEBhMCVVMxDTAL
BgNVBAgMBFRlc3QxDjAMBgNVBAcMBUxvY2FsMQ4wDAYDVQQKDAVNeU9yZzEQMA4G
A1UECwwHU2lnbmluZzERMA8GA1UEAwwISm9obiBEb2UwdjAQBgcqhkjOPQIBBgUr
gQQAIgNiAAQyAVYxvpJ0xMv2cGsTlnOvWEFA2Qxyqs6lN3hIWdCLcfk6oCveujHA
gtVF0rUwHpVFMOwhDj3ePd/Ch7VcsJW26ux72HPaQP5fCqGGDzv4q5I554ILMvKh
uwes9Ou7ffKjggE+MIIBOjAJBgNVHRMEAjAAMAsGA1UdDwQEAwIGwDAdBgNVHSUE
FjAUBggrBgEFBQcDBAYIKwYBBQUHAwMwLQYDVR0fBCYwJDAioCCgHoYcaHR0cDov
L2xvY2FsaG9zdDo4MDgwL2NhLmNybDCBkQYIKwYBBQUHAQEEgYQwgYEwKAYIKwYB
BQUHMAKGHGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9jYS5jcnQwJgYIKwYBBQUHMAGG
Gmh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9vY3NwMC0GCCsGAQUFBzABhiFodHRwOi8v
bG9jYWxob3N0OjgwODAvb2NzcC1iYWNrdXAwHQYDVR0OBBYEFF6ontTMePnS18B4
+omb54C7IghiMB8GA1UdIwQYMBaAFNCWdkR+jEIfJJkBxhol3nclJer+MAoGCCqG
SM49BAMCA2gAMGUCMHxS7Dhbeewg9InrHZ9DxWf7CerKpd6d8yoXtoJsJC7TVknG
gD6nI4m6pztr5fr7qgIxAIZf/Ay8if2JkQrKLqRoyWVyCRo/UWcBFV8Q1rmau/tl
S0S4JFal3j2cYo9awXsecA==
-----END CERTIFICATE-----`

const ecP384CaCert = `-----BEGIN CERTIFICATE-----
MIICSTCCAdCgAwIBAgIUSDA0mGRz87ba4DXQojUjSaemI8owCgYIKoZIzj0EAwIw
XDELMAkGA1UEBhMCVVMxDTALBgNVBAgMBFRlc3QxDjAMBgNVBAcMBUxvY2FsMQ4w
DAYDVQQKDAVNeU9yZzELMAkGA1UECwwCQ0ExETAPBgNVBAMMCE15Um9vdENBMB4X
DTI1MTAwMTE5MDUzM1oXDTM1MDkyOTE5MDUzM1owXDELMAkGA1UEBhMCVVMxDTAL
BgNVBAgMBFRlc3QxDjAMBgNVBAcMBUxvY2FsMQ4wDAYDVQQKDAVNeU9yZzELMAkG
A1UECwwCQ0ExETAPBgNVBAMMCE15Um9vdENBMHYwEAYHKoZIzj0CAQYFK4EEACID
YgAEOqqNxczrutj/g5zNKociVxTIz0CpaWs3I0oepT/BB2wrBCO5zVj6El+Y9k7h
awVGWQcEEJQ5HhUDJNbpul4qDX1PdQpmKVeq1eDas2AXnTlpHt7Un73hHPkjMPjw
GxNno1MwUTAdBgNVHQ4EFgQU0JZ2RH6MQh8kmQHGGiXedyUl6v4wHwYDVR0jBBgw
FoAU0JZ2RH6MQh8kmQHGGiXedyUl6v4wDwYDVR0TAQH/BAUwAwEB/zAKBggqhkjO
PQQDAgNnADBkAjA8az35DSzQmIQFOmYsxRThdVpLL/gGIadNIxosUVTMXsTXQLzD
8ag1bNcfmL4hKIMCMAjcAz1JXlaq0OXN3EKvoxPuqVCHSte9NTv1eV0tHqIg7vKf
UHHjQ2UR9O2l5rpAXA==
-----END CERTIFICATE-----`

const ecP384CaCrl = `-----BEGIN X509 CRL-----
MIIBFTCBmwIBATAKBggqhkjOPQQDAjBcMQswCQYDVQQGEwJVUzENMAsGA1UECAwE
VGVzdDEOMAwGA1UEBwwFTG9jYWwxDjAMBgNVBAoMBU15T3JnMQswCQYDVQQLDAJD
QTERMA8GA1UEAwwITXlSb290Q0EXDTI1MTAwMTE5MDUzM1oXDTI1MTAzMTE5MDUz
M1qgDjAMMAoGA1UdFAQDAgEBMAoGCCqGSM49BAMCA2kAMGYCMQChmoVX3n+xwCvI
6hKSEuSrLqqG0m4niYsLFI20TuVRGuLyLuGUCnYEj1MtOgcUX/ACMQDWlJY2P3rH
sSiv75TzrJ5Nh0/BQPuFx0ogoBJ68imaEouuVdQpoMiTYoACujUNbtU=
-----END X509 CRL-----`

const ecP384OcspResponse = `-----BEGIN OCSP RESPONSE-----
MIIEGAoBAKCCBBEwggQNBgkrBgEFBQcwAQEEggP+MIID+jCCAQShZjBkMQswCQYD
VQQGEwJVUzENMAsGA1UECAwEVGVzdDEOMAwGA1UEBwwFTG9jYWwxDjAMBgNVBAoM
BU15T3JnMQ0wCwYDVQQLDARPQ1NQMRcwFQYDVQQDDA5PQ1NQIFJlc3BvbmRlchgP
MjAyNTEwMDExOTA1MzNaMGQwYjBNMAkGBSsOAwIaBQAEFMMBXUhH1UJjC9/mkAgx
tU0Ghr32BBTQlnZEfoxCHySZAcYaJd53JSXq/gIUASIOdmkwstSawU8Q2bl+qQgy
YKqCABgPMjAyNTEwMDExOTA1MzNaoSMwITAfBgkrBgEFBQcwAQIEEgQQYZbfcwut
cDiGMA0Fp3VK3TAKBggqhkjOPQQDAgNnADBkAjB9WcGuf5O4bdh5L6z161aeFUwk
v7drPvC3ZwZ1KbLZmegHTYfTSbgJv1Z6Mn957FkCMDpZ0Ri9oWEAtQCSvInib/iL
cbH4oOxy/uZ7fyZRFrmL4FvFaQuz6CyUtPp47+XrvqCCAnkwggJ1MIICcTCCAfag
AwIBAgIUASIOdmkwstSawU8Q2bl+qQgyYKswCgYIKoZIzj0EAwIwXDELMAkGA1UE
BhMCVVMxDTALBgNVBAgMBFRlc3QxDjAMBgNVBAcMBUxvY2FsMQ4wDAYDVQQKDAVN
eU9yZzELMAkGA1UECwwCQ0ExETAPBgNVBAMMCE15Um9vdENBMCAXDTI1MTAwMTE5
MDUzM1oYDzIwNTMwMjE2MTkwNTMzWjBkMQswCQYDVQQGEwJVUzENMAsGA1UECAwE
VGVzdDEOMAwGA1UEBwwFTG9jYWwxDjAMBgNVBAoMBU15T3JnMQ0wCwYDVQQLDARP
Q1NQMRcwFQYDVQQDDA5PQ1NQIFJlc3BvbmRlcjB2MBAGByqGSM49AgEGBSuBBAAi
A2IABNX6RLWt25G4YJ0/v3lnwUqUyF3RNrPcUlyGsdMwYSYTVczvmoGn97+Oh7zd
CszB4nbydhXNOIVKmw/d2sG19TtgdqDsY06kiLqL/AEUWcb3vEfdSpppQJmxbh6r
CGFZO6NvMG0wCQYDVR0TBAIwADALBgNVHQ8EBAMCB4AwEwYDVR0lBAwwCgYIKwYB
BQUHAwkwHQYDVR0OBBYEFFtrYdeiOTGnJK39URtAnywEu/YSMB8GA1UdIwQYMBaA
FNCWdkR+jEIfJJkBxhol3nclJer+MAoGCCqGSM49BAMCA2kAMGYCMQDC/al3W7vE
jzkHSeQxafgkHb273YvVbULLX00qXzLbFmuThUvdoZuzoyzTbRatyYACMQDVipk1
wVWfCY15RCdimqwpbODQQd3TR3rvi3X0d2Y8Pb8/g3HH1H/xbTRNRqcLQlk=
-----END OCSP RESPONSE-----`

function pemToUint8Array(
    pem: string | Uint8Array<ArrayBuffer>,
): Uint8Array<ArrayBuffer> {
    pem = typeof pem === 'string' ? pem : new TextDecoder().decode(pem)

    // Remove all headers, footers, and whitespace
    const b64 = pem
        .trim()
        .replace(/-----BEGIN [^-]+-----/, '')
        .replace(/-----END [^-]+-----/, '')
        .replace(/\s+/g, '')

    const binary = atob(b64)
    const bytes = new Uint8Array(binary.length)
    for (let i = 0; i < binary.length; i++) {
        bytes[i] = binary.charCodeAt(i)
    }

    return bytes
}

export const ecP384SigningKeys = {
    privateKey: pemToUint8Array(ecP384PrivateKeyPem),
    cert: pemToUint8Array(ecP384Cert),
    caCert: pemToUint8Array(ecP384CaCert),
    caCrl: pemToUint8Array(ecP384CaCrl),
    ocspResponse: pemToUint8Array(ecP384OcspResponse),
    privateKeyPem: ecP384PrivateKeyPem,
    certPem: ecP384Cert,
    caCertPem: ecP384CaCert,
    caCrlPem: ecP384CaCrl,
    ocspResponsePem: ecP384OcspResponse,
}
