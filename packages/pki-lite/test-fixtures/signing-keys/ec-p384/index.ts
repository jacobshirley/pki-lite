const ecP384PrivateKeyPem = `-----BEGIN PRIVATE KEY-----
MIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGeMIGbAgEBBDCdbYCm8zdTsigDg2fE
WZnIzdHCR0ZotY2153W9YX20TMP5lwAn2QynEmrdHT0/TyuhZANiAARbiDLi139S
4WwMkaGVF7nSIZcv0C4EV+H45mZZO4KsLOobvVVDWjWnC9f+eKjq9zm9NqUInRY1
Unm/9J/huDsxvGMV5nkU1TTcLpQa9DeMF3y1oc4z79AdfoPSTyoOyC8=
-----END PRIVATE KEY-----`

const ecP384Cert = `-----BEGIN CERTIFICATE-----
MIIDOzCCAsKgAwIBAgIURzcZzHFyCbw6rl7aTmBIcRNxRJMwCgYIKoZIzj0EAwIw
XDELMAkGA1UEBhMCVVMxDTALBgNVBAgMBFRlc3QxDjAMBgNVBAcMBUxvY2FsMQ4w
DAYDVQQKDAVNeU9yZzELMAkGA1UECwwCQ0ExETAPBgNVBAMMCE15Um9vdENBMB4X
DTI1MDkyMTEwNTkxN1oXDTI2MDkyMTEwNTkxN1owYTELMAkGA1UEBhMCVVMxDTAL
BgNVBAgMBFRlc3QxDjAMBgNVBAcMBUxvY2FsMQ4wDAYDVQQKDAVNeU9yZzEQMA4G
A1UECwwHU2lnbmluZzERMA8GA1UEAwwISm9obiBEb2UwdjAQBgcqhkjOPQIBBgUr
gQQAIgNiAARbiDLi139S4WwMkaGVF7nSIZcv0C4EV+H45mZZO4KsLOobvVVDWjWn
C9f+eKjq9zm9NqUInRY1Unm/9J/huDsxvGMV5nkU1TTcLpQa9DeMF3y1oc4z79Ad
foPSTyoOyC+jggE+MIIBOjAJBgNVHRMEAjAAMAsGA1UdDwQEAwIGwDAdBgNVHSUE
FjAUBggrBgEFBQcDBAYIKwYBBQUHAwMwLQYDVR0fBCYwJDAioCCgHoYcaHR0cDov
L2xvY2FsaG9zdDo4MDgwL2NhLmNybDCBkQYIKwYBBQUHAQEEgYQwgYEwKAYIKwYB
BQUHMAKGHGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9jYS5jcnQwJgYIKwYBBQUHMAGG
Gmh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9vY3NwMC0GCCsGAQUFBzABhiFodHRwOi8v
bG9jYWxob3N0OjgwODAvb2NzcC1iYWNrdXAwHQYDVR0OBBYEFNGForjv2RfcErZe
swEGfueaUu8sMB8GA1UdIwQYMBaAFKkajIeDCp6fKS0qofa1eiAUbBnwMAoGCCqG
SM49BAMCA2cAMGQCMFcdw3TC9RGL2fWR3I+S9qHpbNs+MmLO0hyoUqDpYRlUuogI
msCgo2PasFbe4vpJ+gIwQReHWqqObLC5LNI1bnW3hqUazpcmn47QqkCBD33Q65lH
j8R86UAcRA0MmtNDhsrQ
-----END CERTIFICATE-----`

const ecP384CaCert = `-----BEGIN CERTIFICATE-----
MIICSjCCAdCgAwIBAgIUeweS03nzhPb652ympY8JEoF0zz4wCgYIKoZIzj0EAwIw
XDELMAkGA1UEBhMCVVMxDTALBgNVBAgMBFRlc3QxDjAMBgNVBAcMBUxvY2FsMQ4w
DAYDVQQKDAVNeU9yZzELMAkGA1UECwwCQ0ExETAPBgNVBAMMCE15Um9vdENBMB4X
DTI1MDkyMTEwNTkxN1oXDTM1MDkxOTEwNTkxN1owXDELMAkGA1UEBhMCVVMxDTAL
BgNVBAgMBFRlc3QxDjAMBgNVBAcMBUxvY2FsMQ4wDAYDVQQKDAVNeU9yZzELMAkG
A1UECwwCQ0ExETAPBgNVBAMMCE15Um9vdENBMHYwEAYHKoZIzj0CAQYFK4EEACID
YgAEukdfuVCcfKPMN7q89LTxXuhnUOGhwIqbICaCLRZnu1iNxGtzHclmuscjCMu+
KUxrTb1lZatTK11jjWXvspLKFLWJtfXW90UOwRKGA0oQeg32JcPxMO3jPmM5B/AY
cbKRo1MwUTAdBgNVHQ4EFgQUqRqMh4MKnp8pLSqh9rV6IBRsGfAwHwYDVR0jBBgw
FoAUqRqMh4MKnp8pLSqh9rV6IBRsGfAwDwYDVR0TAQH/BAUwAwEB/zAKBggqhkjO
PQQDAgNoADBlAjEA+AcvIr2nI0NpTlBdKCDfU/b4W155xa28kCwPivvO0dPmZZgP
G1YM0L/XlHVDwMmvAjAo7Mys/nOq75/Yq+/2Oi7pz93nTa45o8OwRsulRhkkV50k
SP9KJlgTNVXb7acEj5s=
-----END CERTIFICATE-----`

const ecP384CaCrl = `-----BEGIN X509 CRL-----
MIIBFDCBmwIBATAKBggqhkjOPQQDAjBcMQswCQYDVQQGEwJVUzENMAsGA1UECAwE
VGVzdDEOMAwGA1UEBwwFTG9jYWwxDjAMBgNVBAoMBU15T3JnMQswCQYDVQQLDAJD
QTERMA8GA1UEAwwITXlSb290Q0EXDTI1MDkyMTEwNTkxN1oXDTI1MTAyMTEwNTkx
N1qgDjAMMAoGA1UdFAQDAgEBMAoGCCqGSM49BAMCA2gAMGUCMEv5qB60iT+pi8lU
bdViousOzXPse6zTlOJOV7B4yA7ASXw7AiDvU5MpJigt/N2s8gIxAI8bo1uNJzoy
IrRUkXRo2aNsADiZ4m5mM0empA/67zT9s8JJaWJXrMWZKE8h/8rpdA==
-----END X509 CRL-----`

const ecP384OcspResponse = `-----BEGIN OCSP RESPONSE-----
MIIEFwoBAKCCBBAwggQMBgkrBgEFBQcwAQEEggP9MIID+TCCAQShZjBkMQswCQYD
VQQGEwJVUzENMAsGA1UECAwEVGVzdDEOMAwGA1UEBwwFTG9jYWwxDjAMBgNVBAoM
BU15T3JnMQ0wCwYDVQQLDARPQ1NQMRcwFQYDVQQDDA5PQ1NQIFJlc3BvbmRlchgP
MjAyNTA5MjExMDU5MTdaMGQwYjBNMAkGBSsOAwIaBQAEFMMBXUhH1UJjC9/mkAgx
tU0Ghr32BBSpGoyHgwqenyktKqH2tXogFGwZ8AIURzcZzHFyCbw6rl7aTmBIcRNx
RJOCABgPMjAyNTA5MjExMDU5MTdaoSMwITAfBgkrBgEFBQcwAQIEEgQQmplGkDI3
gUUMqJAiavdnHDAKBggqhkjOPQQDAgNnADBkAjAbo9z/iE4vKKqlZvW4qPR4RS7r
ACZP7oZVc+mXx7lXgwP0OAlsfQQeEXAT+ALzjN8CMHMYN42Imgl5y6MAb1HVgOwR
pP/+0To4phv8xtLdr36Utv2gAVEcfgC7S586/GOcaKCCAngwggJ0MIICcDCCAfag
AwIBAgIURzcZzHFyCbw6rl7aTmBIcRNxRJQwCgYIKoZIzj0EAwIwXDELMAkGA1UE
BhMCVVMxDTALBgNVBAgMBFRlc3QxDjAMBgNVBAcMBUxvY2FsMQ4wDAYDVQQKDAVN
eU9yZzELMAkGA1UECwwCQ0ExETAPBgNVBAMMCE15Um9vdENBMCAXDTI1MDkyMTEw
NTkxN1oYDzIwNTMwMjA2MTA1OTE3WjBkMQswCQYDVQQGEwJVUzENMAsGA1UECAwE
VGVzdDEOMAwGA1UEBwwFTG9jYWwxDjAMBgNVBAoMBU15T3JnMQ0wCwYDVQQLDARP
Q1NQMRcwFQYDVQQDDA5PQ1NQIFJlc3BvbmRlcjB2MBAGByqGSM49AgEGBSuBBAAi
A2IABJdzw+6h6rN2Ywchus8QC1Uq4HFRYQFn2yDltIxWFBiNUOnQcTwY3H+d0I9n
iM8CQiRmB5vxBCwZ6RwITl+w2W2NRHwPabul1hDGTofrvVqAE2ts++MwC8UXw1SS
n7AIFaNvMG0wCQYDVR0TBAIwADALBgNVHQ8EBAMCB4AwEwYDVR0lBAwwCgYIKwYB
BQUHAwkwHQYDVR0OBBYEFA2GQBQLjntcD/AqHREP2jnnnUMLMB8GA1UdIwQYMBaA
FKkajIeDCp6fKS0qofa1eiAUbBnwMAoGCCqGSM49BAMCA2gAMGUCMFkGMpmjm/Ab
SJi+buTPti7ODiuGkatFWiX1yhM+DIG/lVCjP6Xg0Zm5E/rbK4qT2wIxALGggPXB
zknRp8XCiew/tVbB1dFuEJPFo6AO2qS/46FizoE8YQTUEM5tOKgThOQVTA==
-----END OCSP RESPONSE-----`

function pemToUint8Array(pem: string | Uint8Array): Uint8Array {
    pem = typeof pem === 'string' ? pem : new TextDecoder().decode(pem)

    // Remove all headers, footers, and whitespace
    const b64 = pem
        .trim()
        .replace(/-----BEGIN [^-]+-----/, '')
        .replace(/-----END [^-]+-----/, '')
        .replace(/\s+/g, '')

    const binary = atob(b64)
    const bytes = new Uint8Array(binary.length)
    for (let i = 0; i < binary.length; i++) {
        bytes[i] = binary.charCodeAt(i)
    }

    return bytes
}

export const ecP384SigningKeys = {
    privateKey: pemToUint8Array(ecP384PrivateKeyPem),
    cert: pemToUint8Array(ecP384Cert),
    caCert: pemToUint8Array(ecP384CaCert),
    caCrl: pemToUint8Array(ecP384CaCrl),
    ocspResponse: pemToUint8Array(ecP384OcspResponse),
    privateKeyPem: ecP384PrivateKeyPem,
    certPem: ecP384Cert,
    caCertPem: ecP384CaCert,
    caCrlPem: ecP384CaCrl,
    ocspResponsePem: ecP384OcspResponse,
}
